//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MiniPythonParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MiniPythonParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMiniPythonParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] MiniPythonParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] MiniPythonParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.mainStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMainStatement([NotNull] MiniPythonParser.MainStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.mainStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMainStatement([NotNull] MiniPythonParser.MainStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.defStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefStatement([NotNull] MiniPythonParser.DefStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.defStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefStatement([NotNull] MiniPythonParser.DefStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgList([NotNull] MiniPythonParser.ArgListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgList([NotNull] MiniPythonParser.ArgListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] MiniPythonParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] MiniPythonParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] MiniPythonParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] MiniPythonParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStatement([NotNull] MiniPythonParser.ForStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStatement([NotNull] MiniPythonParser.ForStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] MiniPythonParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] MiniPythonParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.printStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintStatement([NotNull] MiniPythonParser.PrintStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.printStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintStatement([NotNull] MiniPythonParser.PrintStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.assignStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStatement([NotNull] MiniPythonParser.AssignStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.assignStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStatement([NotNull] MiniPythonParser.AssignStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.functionCallStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallStatement([NotNull] MiniPythonParser.FunctionCallStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.functionCallStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallStatement([NotNull] MiniPythonParser.FunctionCallStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSequence([NotNull] MiniPythonParser.SequenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.sequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSequence([NotNull] MiniPythonParser.SequenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] MiniPythonParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] MiniPythonParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] MiniPythonParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] MiniPythonParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison([NotNull] MiniPythonParser.ComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison([NotNull] MiniPythonParser.ComparisonContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.additionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditionExpression([NotNull] MiniPythonParser.AdditionExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.additionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditionExpression([NotNull] MiniPythonParser.AdditionExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.additionFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditionFactor([NotNull] MiniPythonParser.AdditionFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.additionFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditionFactor([NotNull] MiniPythonParser.AdditionFactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicationExpression([NotNull] MiniPythonParser.MultiplicationExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.multiplicationExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicationExpression([NotNull] MiniPythonParser.MultiplicationExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.multiplicationFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicationFactor([NotNull] MiniPythonParser.MultiplicationFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.multiplicationFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicationFactor([NotNull] MiniPythonParser.MultiplicationFactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.elementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementExpression([NotNull] MiniPythonParser.ElementExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.elementExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementExpression([NotNull] MiniPythonParser.ElementExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.elementAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementAccess([NotNull] MiniPythonParser.ElementAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.elementAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementAccess([NotNull] MiniPythonParser.ElementAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] MiniPythonParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] MiniPythonParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniPythonParser.primitiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimitiveExpression([NotNull] MiniPythonParser.PrimitiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniPythonParser.primitiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimitiveExpression([NotNull] MiniPythonParser.PrimitiveExpressionContext context);
}
